/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package votingsystem;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import util.DatabaseConnection;

/**
 *
 * @author ejave
 */
public class SignInInterface extends javax.swing.JFrame {

    /**
     * @return the txtID
     */
    public javax.swing.JFormattedTextField getTxtID() {
        return txtID;
    }

    /**
     * @return the txtIDConfirm
     */
    public javax.swing.JPasswordField getTxtIDConfirm() {
        return txtIDConfirm;
    }

    /**
     * Creates new form SignInInterface
     */
    public SignInInterface() {
        initComponents();
        DatabaseConnection.getDatabaseConnection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        BLogin = new javax.swing.JButton();
        BCancel = new javax.swing.JButton();
        txtIDConfirm = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        txtID = new javax.swing.JFormattedTextField();
        BDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(36, 47, 65));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 80)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Sign In");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ID Number");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Confirm ID No");

        BLogin.setBackground(new java.awt.Color(12, 108, 181));
        BLogin.setText("Log-in");
        BLogin.setToolTipText("");
        BLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BLoginActionPerformed(evt);
            }
        });
        BLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BLoginKeyPressed(evt);
            }
        });

        BCancel.setBackground(new java.awt.Color(12, 108, 181));
        BCancel.setText("Exit");
        BCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCancelActionPerformed(evt);
            }
        });

        txtIDConfirm.setBackground(new java.awt.Color(36, 47, 65));
        txtIDConfirm.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtIDConfirm.setForeground(new java.awt.Color(255, 255, 255));
        txtIDConfirm.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtIDConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDConfirmActionPerformed(evt);
            }
        });
        txtIDConfirm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDConfirmKeyPressed(evt);
            }
        });

        txtID.setBackground(new java.awt.Color(36, 47, 65));
        txtID.setForeground(new java.awt.Color(255, 255, 255));
        try {
            txtID.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtID.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N

        BDelete.setBackground(new java.awt.Color(12, 108, 181));
        BDelete.setText("Reset");
        BDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtIDConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(BLogin)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BDelete)
                                .addGap(13, 13, 13)
                                .addComponent(BCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel4)
                        .addGap(41, 41, 41))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(32, 32, 32)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIDConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BCancel)
                    .addComponent(BLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {BCancel, BLogin});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(543, 374));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCancelActionPerformed
        System.exit(0);
    }//GEN-LAST:event_BCancelActionPerformed

    private void BLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BLoginActionPerformed
        // TODO add your handling code here:

        String confirmPassword = new String(getTxtIDConfirm().getPassword());

        try {
            if (getTxtID().getText().replace("-", "").trim().equals(confirmPassword.trim())) {
                Connection c = DatabaseConnection.getDatabaseConnection();
                PreparedStatement ps = c.prepareStatement("SELECT * FROM student WHERE IDNUMBER = ?");
                ps.setString(1, getTxtID().getText());
                ResultSet rs = ps.executeQuery();
                rs.beforeFirst();
                if (rs.next()) {

                    PreparedStatement voteChecker = c.prepareStatement("SELECT * FROM shs_election.votes WHERE STUDENTID=?");
                    voteChecker.setString(1, rs.getString("IDNUMBER"));
                    ResultSet voteResult = voteChecker.executeQuery();
                    voteResult.beforeFirst();
                    if (voteResult.next()) {
                        JOptionPane.showMessageDialog(this, "Vote data detected for ID Number: "+ rs.getString("IDNUMBER") + " "+ voteResult.getString("STUDENTNAME") +"\nCannot vote more than once.", "Error Message", JOptionPane.ERROR_MESSAGE);
                        return;
                    }

                    JOptionPane.showMessageDialog(this, "Log-in success!");
                    VotersInterface v = new VotersInterface();
                    v.setIdNumber(rs.getString("IDNUMBER"));
                    v.setDivision(rs.getString("SECTION"));
                    v.viewStudentInfo();
                    v.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Student ID not found!");
                }
            } else {
                JOptionPane.showMessageDialog(this, "ID Numbers does not match");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_BLoginActionPerformed

    private void txtIDConfirmKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDConfirmKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            String confirmPassword = new String(getTxtIDConfirm().getPassword());

            try {
                if (getTxtID().getText().replace("-", "").trim().equals(confirmPassword.trim())) {
                    Connection c = DatabaseConnection.getDatabaseConnection();
                    PreparedStatement ps = c.prepareStatement("SELECT * FROM student WHERE IDNUMBER = ?");
                    ps.setString(1, getTxtID().getText());
                    ResultSet rs = ps.executeQuery();
                    rs.beforeFirst();
                    if (rs.next()) {

                        PreparedStatement voteChecker = c.prepareStatement("SELECT * FROM shs_election.votes WHERE STUDENTID=?");
                        voteChecker.setString(1, rs.getString("IDNUMBER"));
                        ResultSet voteResult = voteChecker.executeQuery();
                        voteResult.beforeFirst();
                        if (voteResult.next()) {
                            JOptionPane.showMessageDialog(this, "Vote data detected for ID Number: "+ rs.getString("IDNUMBER") + " "+ voteResult.getString("STUDENTNAME") +"\nCannot vote more than once.", "Error Message", JOptionPane.ERROR_MESSAGE);
                            return;
                        }

                        JOptionPane.showMessageDialog(this, "Log-in success!");
                        VotersInterface v = new VotersInterface();
                        v.setIdNumber(rs.getString("IDNUMBER"));
                        v.setDivision(rs.getString("SECTION"));
                        v.viewStudentInfo();
                        v.setVisible(true);
                    } else {
                        JOptionPane.showMessageDialog(this, "Student ID not found!");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "ID Numbers does not match");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_txtIDConfirmKeyPressed

    private void txtIDConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDConfirmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDConfirmActionPerformed

    private void BDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BDeleteActionPerformed
        getTxtID().setText(null);
        getTxtIDConfirm().setText(null);
    }//GEN-LAST:event_BDeleteActionPerformed

    private void BLoginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BLoginKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            String confirmPassword = new String(getTxtIDConfirm().getPassword());

            try {
                if (getTxtID().getText().replace("-", "").trim().equals(confirmPassword.trim())) {
                    Connection c = DatabaseConnection.getDatabaseConnection();
                    PreparedStatement ps = c.prepareStatement("SELECT * FROM student WHERE IDNUMBER = ?");
                    ps.setString(1, getTxtID().getText());
                    ResultSet rs = ps.executeQuery();
                    rs.beforeFirst();
                    if (rs.next()) {

                        PreparedStatement voteChecker = c.prepareStatement("SELECT * FROM shs_election.votes WHERE STUDENTID=?");
                        voteChecker.setString(1, rs.getString("IDNUMBER"));
                        ResultSet voteResult = voteChecker.executeQuery();
                        voteResult.beforeFirst();
                        if (voteResult.next()) {
                            JOptionPane.showMessageDialog(this, "Vote data detected. Cannot vote more than once.", "Error Message", JOptionPane.ERROR_MESSAGE);
                            return;
                        }

                        JOptionPane.showMessageDialog(this, "Log-in success!");
                        VotersInterface v = new VotersInterface();
                        v.setIdNumber(rs.getString("IDNUMBER"));
                        v.setDivision(rs.getString("SECTION"));
                        v.viewStudentInfo();
                        v.setVisible(true);
                    } else {
                        JOptionPane.showMessageDialog(this, "Student ID not found!");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "ID Numbers does not match");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }

    }//GEN-LAST:event_BLoginKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignInInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignInInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignInInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignInInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignInInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BCancel;
    private javax.swing.JButton BDelete;
    private javax.swing.JButton BLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    public static javax.swing.JFormattedTextField txtID;
    public static javax.swing.JPasswordField txtIDConfirm;
    // End of variables declaration//GEN-END:variables
}
