/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package votingsystem;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import util.DatabaseConnection;

/**
 *
 * @author ejave
 */
public class Result extends javax.swing.JFrame {

    /**
     * Creates new form AdminHomeInterface
     */
    public Result() {
        initComponents();
        try {
            tblPresidentResult.setModel(getPresidentVotes());
            tblVicePresidentResult.setModel(getVicePresidentVotes());
            tblGovResult.setModel(getLocalVotes("GOVERNOR"));
            tblVGovResult.setModel(getLocalVotes("VICEGOVERNOR"));
            tblBoardMemberResult.setModel(getRepresentativeVotes("BOARD MEMBER"));
            tblRepResult.setModel(getRepresentativeVotes("REPRESENTATIVE"));
        } catch (SQLException ex) {
            Logger.getLogger(Result.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPresidentResult = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblGovResult = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblVicePresidentResult = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblVGovResult = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tblRepResult = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        tblBoardMemberResult = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();

        jLabel5.setForeground(new java.awt.Color(240, 240, 240));
        jLabel5.setText("Governor");

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Votes"
            }
        ));
        jScrollPane5.setViewportView(jTable5);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(36, 47, 65));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 50)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ELECTORAL POSITION RESULT");

        tblPresidentResult.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblPresidentResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Votes", "% of Votes"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPresidentResult.setRowHeight(30);
        jScrollPane1.setViewportView(tblPresidentResult);

        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("President");

        jLabel3.setForeground(new java.awt.Color(240, 240, 240));
        jLabel3.setText("Vice President");

        jLabel4.setForeground(new java.awt.Color(240, 240, 240));
        jLabel4.setText("Governor");

        tblGovResult.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblGovResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Division", "Votes", "% of Votes"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGovResult.setRowHeight(30);
        jScrollPane4.setViewportView(tblGovResult);

        tblVicePresidentResult.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblVicePresidentResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Votes", "% of Votes"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblVicePresidentResult.setRowHeight(30);
        jScrollPane2.setViewportView(tblVicePresidentResult);

        jLabel9.setForeground(new java.awt.Color(240, 240, 240));
        jLabel9.setText("Representative");

        tblVGovResult.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblVGovResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Division", "Votes", "% of Votes"
            }
        ));
        tblVGovResult.setRowHeight(30);
        jScrollPane9.setViewportView(tblVGovResult);

        jLabel10.setForeground(new java.awt.Color(240, 240, 240));
        jLabel10.setText("Vice Governor");

        tblRepResult.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblRepResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Division", "Votes", "% of Votes"
            }
        ));
        tblRepResult.setRowHeight(30);
        jScrollPane10.setViewportView(tblRepResult);

        jLabel11.setForeground(new java.awt.Color(240, 240, 240));
        jLabel11.setText("Board Member");

        tblBoardMemberResult.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblBoardMemberResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Division", "Votes", "% of Votes"
            }
        ));
        tblBoardMemberResult.setRowHeight(30);
        jScrollPane11.setViewportView(tblBoardMemberResult);

        jLabel12.setForeground(new java.awt.Color(240, 240, 240));
        jLabel12.setText("Governor");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 938, Short.MAX_VALUE)
                                    .addComponent(jScrollPane4))
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(401, 401, 401))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 3, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 813, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(154, 154, 154))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 938, Short.MAX_VALUE)
                                    .addComponent(jScrollPane11))
                                .addContainerGap())))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 177, Short.MAX_VALUE))
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1132, 1035));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Result().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable tblBoardMemberResult;
    private javax.swing.JTable tblGovResult;
    private javax.swing.JTable tblPresidentResult;
    private javax.swing.JTable tblRepResult;
    private javax.swing.JTable tblVGovResult;
    private javax.swing.JTable tblVicePresidentResult;
    // End of variables declaration//GEN-END:variables

    private DefaultTableModel getPresidentVotes() throws SQLException {
        Connection c = DatabaseConnection.getDatabaseConnection();
        PreparedStatement ps;
        ResultSet rs;

        DefaultTableModel dtm = new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Name", "Votes", "% of Votes"
                }
        ) {
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };

        ps = c.prepareStatement("SELECT PRESIDENT, count(PRESIDENT) FROM shs_election.votes group by PRESIDENT order by count(PRESIDENT) desc;");
        rs = ps.executeQuery();
        while (rs.next()) {
            ArrayList result = new ArrayList<>();
            result.add(rs.getString(1));
            result.add(rs.getInt(2) + "/" + getStudentPopulation("ALL"));
            double percent = (double) rs.getInt(2) / (double) getStudentPopulation("ALL");
            result.add(String.format("%.2f", (percent * 100)) + "%");
            dtm.addRow(result.toArray());
        }

        return dtm;
    }

    private DefaultTableModel getVicePresidentVotes() throws SQLException {
        Connection c = DatabaseConnection.getDatabaseConnection();
        PreparedStatement ps;
        ResultSet rs;

        DefaultTableModel dtm = new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Name", "Votes", "% of Votes"
                }
        ) {
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };

        ps = c.prepareStatement("SELECT VICEPRESIDENT, count(VICEPRESIDENT) FROM shs_election.votes group by VICEPRESIDENT order by count(VICEPRESIDENT) desc;");
        rs = ps.executeQuery();
        while (rs.next()) {
            ArrayList result = new ArrayList<>();
            result.add(rs.getString(1));
            result.add(rs.getInt(2) + "/" + getStudentPopulation("ALL"));

            double percent = (double) rs.getInt(2) / (double) getStudentPopulation("ALL");
            result.add(String.format("%.2f", (percent * 100)) + "%");
            dtm.addRow(result.toArray());
        }

        return dtm;
    }

    private DefaultTableModel getLocalVotes(String position) throws SQLException {
        Connection c = DatabaseConnection.getDatabaseConnection();
        PreparedStatement ps;
        ResultSet rs;
        DefaultTableModel dtm = new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Name", "Division", "Votes", "% of Votes"
                }
        ) {

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };

        ps = c.prepareStatement("SELECT " + position + ",DIVISION, count(" + position + ") FROM shs_election.votes group by " + position + " order by DIVISION, count(" + position + ") desc;");
        rs = ps.executeQuery();
        while (rs.next()) {
            ArrayList result = new ArrayList<>();
            result.add(rs.getString(1));
            result.add(rs.getString(2));
            result.add(rs.getInt(3) + "/" + getStudentPopulation(rs.getString(2)));
            double percent = ((double)rs.getInt(3) / (double)getStudentPopulation(rs.getString(2)));
            result.add(String.format("%.2f", (percent * 100)) + "%");
            dtm.addRow(result.toArray());
        }

        return dtm;
    }

    private DefaultTableModel getRepresentativeVotes(String position) throws SQLException {
        Connection c = DatabaseConnection.getDatabaseConnection();
        PreparedStatement ps;
        ResultSet rs;
        DefaultTableModel dtm = new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Name", "Division", "Votes", "% of Votes"
                }
        ) {

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };

        ps = c.prepareStatement("SELECT DISTINCT CANDIDATENAME,DIVISION,count(CANDIDATENAME) FROM shs_election.votes_rep WHERE upper(position)='" + position + "' group by CANDIDATENAME order by DIVISION,count(CANDIDATENAME) desc;");
        rs = ps.executeQuery();
        while (rs.next()) {
            ArrayList result = new ArrayList<>();
            result.add(rs.getString(1));
            result.add(rs.getString(2));
            result.add(rs.getInt(3) + "/" + getStudentPopulation(rs.getString(2)));
            double percent = (double)rs.getInt(3) / (double)getStudentPopulation(rs.getString(2));
            result.add(String.format("%.2f", (percent * 100)) + "%");
            dtm.addRow(result.toArray());
        }

        return dtm;
    }

    private int getStudentPopulation(String section) throws SQLException {
        Connection c = DatabaseConnection.getDatabaseConnection();
        PreparedStatement ps;
        int population = 0;
        if (section.equals("ALL")) {
            ps = c.prepareStatement("SELECT sum(`count`) FROM shs_election.vw_student_population;");
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                population = rs.getInt(1);
            }
        } else {
            ps = c.prepareStatement("SELECT sum(`count`) FROM shs_election.vw_student_population WHERE division =?");
            ps.setString(1, section);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                population = rs.getInt(1);
            }
        }
        return population;
    }

}
